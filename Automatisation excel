Option Explicit

' >>> Macro pour vérifier 4 champs définis dans la feuille Config et écrire O/N
Public Sub VerifierChamps()
    Dim cfgWS      As Worksheet
    Dim baseWS     As Worksheet
    Dim srcWB      As Workbook, srcWS As Worksheet
    Dim dict       As Object
    Dim key        As String
    Dim lastRowB   As Long, lastRowS As Long
    Dim i As Long, j As Long
    Dim sourcePath As String, sourceSheet As String
    Dim headerRow  As Long, resultCol As String
    Dim cols(1 To 4) As String
    
    ' Charger la config depuis la feuille Config (cellules B3 à B10)
    On Error Resume Next: Set cfgWS = ThisWorkbook.Sheets("Config"): On Error GoTo 0
    If cfgWS Is Nothing Then MsgBox "Feuille 'Config' introuvable.", vbCritical: Exit Sub
    With cfgWS
        sourcePath  = Trim(.Range("B3").Value)    ' Chemin complet du fichier source
        sourceSheet = Trim(.Range("B4").Value)    ' Nom de la feuille source
        headerRow   = CLng(.Range("B5").Value)    ' Ligne d'en-tête (1-based)
        cols(1)     = Trim(.Range("B6").Value)    ' Colonne 1 à comparer
        cols(2)     = Trim(.Range("B7").Value)    ' Colonne 2
        cols(3)     = Trim(.Range("B8").Value)    ' Colonne 3
        cols(4)     = Trim(.Range("B9").Value)    ' Colonne 4
        resultCol   = Trim(.Range("B10").Value)   ' Colonne où écrire O/N
    End With
    ' Validation
    If sourcePath = "" Or sourceSheet = "" Or headerRow < 1 Or resultCol = "" Then
        MsgBox "Paramètres invalides dans Config (B3:B10).", vbCritical: Exit Sub
    End If
    
    Set dict   = CreateObject("Scripting.Dictionary")
    Set baseWS = ThisWorkbook.ActiveSheet
    
    ' Ouvrir et lire le classeur source
    On Error Resume Next: Set srcWB = Workbooks.Open(sourcePath, ReadOnly:=True): On Error GoTo 0
    If srcWB Is Nothing Then MsgBox "Impossible d'ouvrir '" & sourcePath & "'.", vbCritical: Exit Sub
    Set srcWS = srcWB.Sheets(sourceSheet)
    If srcWS Is Nothing Then MsgBox "Feuille '" & sourceSheet & "' introuvable.", vbCritical: srcWB.Close False: Exit Sub
    lastRowS = srcWS.Cells(srcWS.Rows.Count, ColumnLetterToNumber(cols(1))).End(xlUp).Row
    For i = headerRow + 1 To lastRowS
        key = "": For j = 1 To 4: key = key & "|" & CStr(srcWS.Cells(i, ColumnLetterToNumber(cols(j))).Value): Next j
        dict(key) = True
    Next i
    srcWB.Close False
    
    ' Préparer résultat
    lastRowB = baseWS.Cells(baseWS.Rows.Count, ColumnLetterToNumber(cols(1))).End(xlUp).Row
    If baseWS.Cells(headerRow, ColumnLetterToNumber(resultCol)).Value = "" Then
        baseWS.Cells(headerRow, ColumnLetterToNumber(resultCol)).Value = "Result"
    End If
    For i = headerRow + 1 To lastRowB
        key = "": For j = 1 To 4: key = key & "|" & CStr(baseWS.Cells(i, ColumnLetterToNumber(cols(j))).Value): Next j
        baseWS.Cells(i, ColumnLetterToNumber(resultCol)).Value = IIf(dict.Exists(key), "O", "N")
    Next i
    MsgBox "Vérification terminée !", vbInformation
End Sub

' >>> Ajouter un bouton sur Config pour lancer VerifierChamps
Public Sub AjouterBoutonVerifier()
    Dim cfgWS As Worksheet
    Dim btn   As Button
    On Error Resume Next: Set cfgWS = ThisWorkbook.Sheets("Config"): On Error GoTo 0
    If cfgWS Is Nothing Then MsgBox "Feuille 'Config' introuvable.", vbCritical: Exit Sub
    ' Supprimer ancien bouton si présent
    For Each btn In cfgWS.Buttons
        If btn.Caption = "Exécuter Vérification" Then btn.Delete
    Next btn
    ' Ajouter le bouton à partir de D3
    With cfgWS
        Set btn = .Buttons.Add(.Range("D3").Left, .Range("D3").Top, 150, 30)
        btn.OnAction = "VerifierChamps"
        btn.Caption  = "Exécuter Vérification"
        btn.Name     = "btnVerifier"
    End With
End Sub

' Conversion lettre de colonne → numéro
Private Function ColumnLetterToNumber(colLetter As String) As Long
    Dim i As Long, result As Long
    colLetter = UCase(colLetter)
    For i = 1 To Len(colLetter)
        result = result * 26 + (Asc(Mid(colLetter, i, 1)) - Asc("A") + 1)
    Next i
    ColumnLetterToNumber = result
End Function
