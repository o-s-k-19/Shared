Option Explicit
Option Compare Text  ' Insensible à la casse

'====================================================
' UDF MultiLookup : recherche unique basée sur plusieurs critères
' Amélioré pour supporter le drag-down Excel via plages de critères séparées
'
' Usage en cellule :
'   =MultiLookup(
'     TableRange,            ' Plage complète avec en-tête en première ligne
'     CriteriaHeaders,       ' Plage mono-ligne des noms de colonnes à comparer (fixe)
'     CriteriaValues,        ' Plage mono-ligne des valeurs à comparer (glissée pour chaque ligne)
'     ReturnColumn           ' Nom exact de la colonne à retourner
'   )
'
Public Function MultiLookup(
    TableRange As Range,
    CriteriaHeaders As Range,
    CriteriaValues As Range,
    ReturnColumn As String
) As Variant
    Dim headerMap As Object: Set headerMap = CreateObject("Scripting.Dictionary")
    Dim i As Long, j As Long, rw As Long
    Dim rngWS As Worksheet: Set rngWS = TableRange.Worksheet
    Dim hdrRow As Long: hdrRow = TableRange.Row
    Dim lastRow As Long: lastRow = TableRange.Row + TableRange.Rows.Count - 1
    Dim lastCol As Long: lastCol = TableRange.Column + TableRange.Columns.Count - 1
    Dim colIndex As Long, retIndex As Long
    Dim critCols As Long: critCols = CriteriaHeaders.Columns.Count
    Dim foundVal As Variant, foundCount As Long
    Dim headerName As String, critValue As String
    
    ' Validation des plages de critères
    If CriteriaHeaders.Rows.Count <> 1 Or CriteriaValues.Rows.Count <> 1 Then
        MultiLookup = CVErr(xlErrRef)
        Exit Function
    End If
    If critCols <> CriteriaValues.Columns.Count Then
        MultiLookup = CVErr(xlErrRef)
        Exit Function
    End If
    
    ' Construire dictionnaire entête -> numéro de colonne
    For j = TableRange.Column To lastCol
        headerMap(Trim(rngWS.Cells(hdrRow, j).Value)) = j
    Next j
    ' Vérifier ReturnColumn
    If Not headerMap.Exists(Trim(ReturnColumn)) Then
        MultiLookup = CVErr(xlErrNA)
        Exit Function
    End If
    retIndex = headerMap(Trim(ReturnColumn))
    
    ' Parcourir chaque ligne de données
    For rw = hdrRow + 1 To lastRow
        Dim matchOK As Boolean: matchOK = True
        For j = 1 To critCols
            headerName = Trim(CStr(CriteriaHeaders.Cells(1, j).Value))
            critValue = Trim(CStr(CriteriaValues.Cells(1, j).Value))
            If Not headerMap.Exists(headerName) Then
                matchOK = False: Exit For
            End If
            colIndex = headerMap(headerName)
            ' Insensible à la casse et aux espaces
            If Trim(rngWS.Cells(rw, colIndex).Value) <> critValue Then
                matchOK = False: Exit For
            End If
        Next j
        If matchOK Then
            foundCount = foundCount + 1
            foundVal = rngWS.Cells(rw, retIndex).Value
            If foundCount > 1 Then
                MultiLookup = CVErr(xlErrValue) ' Plusieurs correspondances
                Exit Function
            End If
        End If
    Next rw
    
    If foundCount = 1 Then
        MultiLookup = foundVal
    Else
        MultiLookup = CVErr(xlErrNA) ' Aucune correspondance
    End If
End Function

'----------------------------------------------------
' Auto-open : enregistrer l'aide et la description
Private Sub Workbook_Open()
    Application.MacroOptions _
        Macro:="MultiLookup", _
        Description:="Recherche une valeur unique dans une table selon plusieurs critères.", _
        Category:="MultiLookup", _
        ArgumentDescriptions:=Array(
            "Plage de la table (avec en-tête en première ligne, données en dessous)", _
            "Plage 1×N des noms de colonnes à comparer (fixe)", _
            "Plage 1×N des valeurs pour chaque ligne (glissé verticalement)", _
            "Nom exact de la colonne à renvoyer"
        )
End Sub
'====================================================